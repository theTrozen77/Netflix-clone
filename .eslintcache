[{"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/MovieDetail.jsx":"1","/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/routes.jsx":"2","/Users/test/Desktop/Netflix clone/netflix-clone/src/Hooks/useRouter.js":"3","/Users/test/Desktop/Netflix clone/netflix-clone/src/Components/Footer.jsx":"4","/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/Dashboard.jsx":"5","/Users/test/Desktop/Netflix clone/netflix-clone/src/Components/Header.jsx":"6","/Users/test/Desktop/Netflix clone/netflix-clone/src/services/movie.js":"7","/Users/test/Desktop/Netflix clone/netflix-clone/src/index.js":"8","/Users/test/Desktop/Netflix clone/netflix-clone/src/utils/request.js":"9","/Users/test/Desktop/Netflix clone/netflix-clone/src/App.js":"10","/Users/test/Desktop/Netflix clone/netflix-clone/src/keys/config.js":"11","/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/TvShows.jsx":"12","/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/Authentication/Login/index.jsx":"13"},{"size":4883,"mtime":1609344948505,"results":"14","hashOfConfig":"15"},{"size":706,"mtime":1609395377283,"results":"16","hashOfConfig":"15"},{"size":1178,"mtime":1609300927470,"results":"17","hashOfConfig":"15"},{"size":861,"mtime":1609335350172,"results":"18","hashOfConfig":"15"},{"size":1693,"mtime":1609341901788,"results":"19","hashOfConfig":"15"},{"size":1122,"mtime":1609342029845,"results":"20","hashOfConfig":"15"},{"size":644,"mtime":1609345196766,"results":"21","hashOfConfig":"15"},{"size":609,"mtime":1609255195174,"results":"22","hashOfConfig":"15"},{"size":305,"mtime":1609259745512,"results":"23","hashOfConfig":"15"},{"size":267,"mtime":1609258071367,"results":"24","hashOfConfig":"15"},{"size":123,"mtime":1609244205946,"results":"25","hashOfConfig":"15"},{"size":1649,"mtime":1609300611441,"results":"26","hashOfConfig":"15"},{"size":984,"mtime":1609395172121,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"msmsg1",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/MovieDetail.jsx",["63","64","65","66"],"import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"../Hooks/useRouter\";\nimport {\n  fetchMovieDetails,\n  fetchMovieVideos,\n  fetchSimilarMovies,\n  fetchUpcomingMovies,\n} from \"../services/movie\";\nimport Pagination from \"react-js-pagination\";\n\nfunction MovieDetail() {\n  const { query, history } = useRouter();\n  const { push } = history;\n  const { movieId } = query;\n  const img_base = \"https://image.tmdb.org/t/p/original/\";\n\n  const [movieDetails, setMovieDetails] = useState({\n    selectedMovieDetails: {},\n    selectedMovieVideos: [],\n    similarMovies: [],\n    upcomingMovies: [],\n    isLoading: false,\n  });\n  const [\n    similarMoviesPaginationDetails,\n    setSimilarMoviesPaginationDetails,\n  ] = useState({\n    activePage: 1,\n    totalPages: 0,\n    totalResults: 0,\n  });\n  const [selectedMovieId, setSelectedMovieId] = useState(\"\");\n  console.log(\"details\", movieDetails);\n\n  useEffect(() => {\n    fetchSelectedMovieDetails();\n  }, [selectedMovieId, similarMoviesPaginationDetails.activePage]);\n  useEffect(() => {\n    setId();\n  }, [movieId]);\n\n  const setId = () => {\n    setSelectedMovieId(movieId);\n  };\n\n  const fetchSelectedMovieDetails = async () => {\n    const response = await fetchMovieDetails(\n      movieId,\n      similarMoviesPaginationDetails.activePage\n    );\n    const videoResponse = await fetchMovieVideos(movieId);\n    const getSimilarMovies = await fetchSimilarMovies(\n      movieId,\n      similarMoviesPaginationDetails.activePage\n    );\n    const getUpcomingMovies = await fetchUpcomingMovies(\n      similarMoviesPaginationDetails.activePage\n    );\n\n    let singleMovieObject = undefined;\n    let videoList = undefined;\n    let similarMovies = undefined;\n    let upcomingMovies = undefined;\n\n    if (response.data) {\n      singleMovieObject = response.data;\n    }\n    if (videoResponse.data) {\n      videoList = videoResponse.data.results;\n    }\n    if (getSimilarMovies.data) {\n      similarMovies = getSimilarMovies.data.results;\n      setSimilarMoviesPaginationDetails({\n        ...similarMoviesPaginationDetails,\n        ...{\n          page: getSimilarMovies.data.page,\n          totalPages: getSimilarMovies.data.total_pages,\n          totalResults: getSimilarMovies.data.total_results,\n        },\n      });\n    }\n    if (getUpcomingMovies.data.results) {\n      upcomingMovies = getUpcomingMovies.data.results;\n    }\n\n    setMovieDetails({\n      ...movieDetails,\n      ...{\n        selectedMovieDetails: singleMovieObject,\n        selectedMovieVideos: videoList,\n        similarMovies: similarMovies,\n        upcomingMovies: upcomingMovies,\n      },\n    });\n  };\n\n  const handleMovieDetail = (id) => {\n    push(`/movie/${id}`);\n  };\n  const handlePageChange = (pageNumber) => {\n    setSimilarMoviesPaginationDetails({\n      ...similarMoviesPaginationDetails,\n      ...{\n        activePage: pageNumber,\n      },\n    });\n  };\n\n  return (\n    <>\n      <div className=\"moviedetail-container\">\n        <div className=\"movies\">\n          {movieDetails.selectedMovieVideos &&\n            movieDetails.selectedMovieVideos.length > 0 && (\n              <iframe\n                className=\"video-playback\"\n                src={`https://www.youtube.com/embed/${movieDetails.selectedMovieVideos[0].key}`}\n              ></iframe>\n            )}\n        </div>\n        <div className=\"movie-info\">\n          <h1 className=\"movieinfo-headline\">\n            {movieDetails.selectedMovieDetails.original_title}\n          </h1>\n          <div className=\"genres\">\n            {movieDetails.selectedMovieDetails &&\n              movieDetails.selectedMovieDetails.genres &&\n              movieDetails.selectedMovieDetails.genres.map((genreDetails) => (\n                <h3>{genreDetails.name}</h3>\n              ))}\n          </div>\n          <div className=\"sub-info\">\n            <div style={{ marginRight: \"5px\" }}>\n              <h2>{movieDetails.selectedMovieDetails.runtime}</h2>\n            </div>\n            <div>\n              <h2>{movieDetails.selectedMovieDetails.release_date}</h2>\n            </div>\n          </div>\n          <p>{movieDetails.selectedMovieDetails.overview}</p>\n        </div>\n        <h2>Similar Movies</h2>\n        <div className=\"box\">\n          {movieDetails.similarMovies &&\n            movieDetails.similarMovies.length &&\n            movieDetails.similarMovies.map((similarMovie) => (\n              <a onClick={() => handleMovieDetail(similarMovie.id)}>\n                <img src={`${img_base}${similarMovie.poster_path}`} alt=\"\" />\n              </a>\n            ))}\n        </div>\n      </div>\n      <div>\n        <Pagination\n          activePage={similarMoviesPaginationDetails.activePage}\n          totalItemsCount={similarMoviesPaginationDetails.totalResults}\n          pageRangeDisplayed={5}\n          onChange={handlePageChange}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default MovieDetail;\n",["67","68"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/routes.jsx",[],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Hooks/useRouter.js",[],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Components/Footer.jsx",["69"],"import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer-container\">\n      <div className=\"footer-information\">\n        <div className=\"footer-c-1\">\n          <ul className=\"c1\">\n            <li>\n              <a href=\"\">About us</a>\n            </li>\n            <li>Movies</li>\n            <li>Tv shows</li>\n          </ul>\n        </div>\n        <div className=\"footer-c-2\">\n          <ul className=\"c2\">\n            <li>Privacy Policy</li>\n            <li>Terms and conditions</li>\n            <li>Help</li>\n          </ul>\n        </div>\n        <div className=\"footer-c-3\">\n          <ul className=\"c3\">\n            <li>FAQ</li>\n            <li>Contact us</li>\n            <li>Legal Notice</li>\n          </ul>\n        </div>\n        <div className=\"footer-c-4\">c4</div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n",["70","71"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/Dashboard.jsx",["72","73","74","75","76","77"],"import React, { useState, useEffect } from \"react\";\nimport { requestFetch } from \"./../utils/request\";\nimport { useHistory } from \"react-router-dom\";\nimport { config } from \"../keys/config\";\nimport MainRoutes from \"./routes\";\n\nfunction Dashboard(props) {\n  const [list, setList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { push } = useHistory();\n  const img_base = \"https://image.tmdb.org/t/p/original/\";\n\n  useEffect(() => {\n    fetchPopularMovies();\n  }, []);\n  const fetchPopularMovies = async () => {\n    const response = await testFetch();\n    if (response) {\n      const { data } = response;\n      setList(data.results);\n    }\n  };\n\n  const handleMovieClick = (id) => {\n    console.log(\"id moview\", id);\n    push(`/movie/${id}`);\n  };\n\n  const testFetch = () => {\n    return requestFetch({\n      method: \"GET\",\n      url: \"/movie/popular\",\n    });\n  };\n  return (\n    <>\n      <div classNameName=\"wrapper\">\n        <section>\n          <div className=\"location\" id=\"home\">\n            <h1 id=\"home\">Popular on Netflix</h1>\n            <div className=\"box\">\n              {list &&\n                list.map((movieDetails, index) => {\n                  return (\n                    <a\n                      className=\"transition-style\"\n                      onClick={() => handleMovieClick(movieDetails.id)}\n                    >\n                      <img\n                        src={`${img_base}${movieDetails.poster_path}`}\n                        alt=\"\"\n                      />\n                    </a>\n                  );\n                })}\n            </div>\n          </div>\n        </section>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","/Users/test/Desktop/Netflix clone/netflix-clone/src/Components/Header.jsx",["78","79","80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"../Hooks/useRouter\";\n\nconst Header = () => {\n  const { push } = useRouter();\n  return (\n    <header>\n      <div className=\"netflixLogo\">\n        <a id=\"logo\" onClick={() => push(\"/\")}>\n          <img\n            src=\"https://github.com/carlosavilae/Netflix-Clone/blob/master/img/logo.PNG?raw=true\"\n            alt=\"Logo Image\"\n          />\n        </a>\n      </div>\n      <nav className=\"main-nav\">\n        <a onClick={() => push(\"/\")}>Home</a>\n        <a onClick={() => push(\"/tvshows\")}>TV Shows</a>\n        <a href=\"#movies\">Movies</a>\n        <a href=\"#originals\">Originals</a>\n        <a href=\"#\">Recently Added</a>\n        <a target=\"_blank\" href=\"https://codepen.io/cb2307/full/NzaOrm\">\n          Portfolio\n        </a>\n      </nav>\n      <nav className=\"sub-nav\">\n        <a href=\"#\">\n          <i className=\"fas fa-search sub-nav-logo\"></i>\n        </a>\n        <a href=\"#\">\n          <i className=\"fas fa-bell sub-nav-logo\"></i>\n        </a>\n        <a href=\"#\">Account</a>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n",["89","90"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/services/movie.js",[],"/Users/test/Desktop/Netflix clone/netflix-clone/src/index.js",["91","92","93"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["94","95"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/utils/request.js",[],"/Users/test/Desktop/Netflix clone/netflix-clone/src/App.js",["96","97"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/keys/config.js",[],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/TvShows.jsx",["98","99","100","101","102"],"/Users/test/Desktop/Netflix clone/netflix-clone/src/Scenes/Authentication/Login/index.jsx",[],{"ruleId":"103","severity":1,"message":"104","line":37,"column":6,"nodeType":"105","endLine":37,"endColumn":66,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":40,"column":6,"nodeType":"105","endLine":40,"endColumn":15,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":115,"column":15,"nodeType":"111","endLine":118,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":147,"column":15,"nodeType":"111","endLine":147,"endColumn":69},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"112","severity":1,"message":"118","line":10,"column":15,"nodeType":"111","endLine":10,"endColumn":26},{"ruleId":"114","replacedBy":"119"},{"ruleId":"116","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":16},{"ruleId":"121","severity":1,"message":"125","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":9,"column":10,"nodeType":"123","messageId":"124","endLine":9,"endColumn":17},{"ruleId":"121","severity":1,"message":"127","line":9,"column":19,"nodeType":"123","messageId":"124","endLine":9,"endColumn":29},{"ruleId":"103","severity":1,"message":"128","line":15,"column":6,"nodeType":"105","endLine":15,"endColumn":8,"suggestions":"129"},{"ruleId":"112","severity":1,"message":"113","line":45,"column":21,"nodeType":"111","endLine":48,"endColumn":22},{"ruleId":"121","severity":1,"message":"130","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"131","line":1,"column":27,"nodeType":"123","messageId":"124","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":9,"column":9,"nodeType":"111","endLine":9,"endColumn":48},{"ruleId":"132","severity":1,"message":"133","line":10,"column":11,"nodeType":"111","endLine":13,"endColumn":13},{"ruleId":"112","severity":1,"message":"113","line":17,"column":9,"nodeType":"111","endLine":17,"endColumn":38},{"ruleId":"112","severity":1,"message":"113","line":18,"column":9,"nodeType":"111","endLine":18,"endColumn":45},{"ruleId":"112","severity":1,"message":"118","line":21,"column":9,"nodeType":"111","endLine":21,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":22,"column":12,"nodeType":"136","endLine":22,"endColumn":27},{"ruleId":"112","severity":1,"message":"118","line":27,"column":9,"nodeType":"111","endLine":27,"endColumn":21},{"ruleId":"112","severity":1,"message":"118","line":30,"column":9,"nodeType":"111","endLine":30,"endColumn":21},{"ruleId":"112","severity":1,"message":"118","line":33,"column":9,"nodeType":"111","endLine":33,"endColumn":21},{"ruleId":"114","replacedBy":"137"},{"ruleId":"116","replacedBy":"138"},{"ruleId":"121","severity":1,"message":"139","line":6,"column":35,"nodeType":"123","messageId":"124","endLine":6,"endColumn":41},{"ruleId":"121","severity":1,"message":"140","line":6,"column":43,"nodeType":"123","messageId":"124","endLine":6,"endColumn":48},{"ruleId":"121","severity":1,"message":"141","line":6,"column":50,"nodeType":"123","messageId":"124","endLine":6,"endColumn":54},{"ruleId":"114","replacedBy":"142"},{"ruleId":"116","replacedBy":"143"},{"ruleId":"121","severity":1,"message":"144","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"140","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":15},{"ruleId":"121","severity":1,"message":"145","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":23},{"ruleId":"121","severity":1,"message":"146","line":6,"column":25,"nodeType":"123","messageId":"124","endLine":6,"endColumn":40},{"ruleId":"103","severity":1,"message":"147","line":12,"column":6,"nodeType":"105","endLine":12,"endColumn":8,"suggestions":"148"},{"ruleId":"112","severity":1,"message":"113","line":48,"column":9,"nodeType":"111","endLine":48,"endColumn":12},{"ruleId":"112","severity":1,"message":"118","line":58,"column":13,"nodeType":"111","endLine":58,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSelectedMovieDetails'. Either include it or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'setId'. Either include it or remove the dependency array.",["150"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["151"],"no-negated-in-lhs",["152"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["151"],["152"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'MainRoutes' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPopularMovies'. Either include it or remove the dependency array.",["153"],"'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["151"],["152"],"'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.",["151"],["152"],"'Dashboard' is defined but never used.","'lastestTvShow' is assigned a value but never used.","'setLatestTvShow' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchLatestTvShow' and 'fetchTvShowDetailOne'. Either include them or remove the dependency array.",["154"],{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [fetchSelectedMovieDetails, selectedMovieId, similarMoviesPaginationDetails.activePage]",{"range":"163","text":"164"},"Update the dependencies array to be: [movieId, setId]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchPopularMovies]",{"range":"167","text":"168"},"Update the dependencies array to be: [fetchLatestTvShow, fetchTvShowDetailOne]",{"range":"169","text":"170"},[969,1029],"[fetchSelectedMovieDetails, selectedMovieId, similarMoviesPaginationDetails.activePage]",[1070,1079],"[movieId, setId]",[488,490],"[fetchPopularMovies]",[376,378],"[fetchLatestTvShow, fetchTvShowDetailOne]"]